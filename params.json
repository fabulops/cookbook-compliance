{"body":"DESCRIPTION\r\n===========\r\n\r\nThis cookbook is an attempt to add some minimal compliance and audit\r\ncapabilities to nodes. Please note that this cookbook is not intended to\r\nreplace host-based IDS systems, such as OSSEC. It is intended to be\r\ncombined with the reporting handlers in chef to alert ops of accidental\r\nchanges to the system outside of any cookbook managed resources.\r\n\r\nRequirements\r\n------------\r\n\r\nThis cookbook is being developed against Chef 0.10.x\r\n\r\nPlatforms\r\n---------\r\n\r\nThis cookbook is being developed against Ubuntu 10.04.3 LTS. Other\r\nplatforms may be added if time and resources permit.\r\n\r\nRecipes\r\n-------\r\n\r\n*compliance::default*\r\n\r\nThe default recipe will identify the platform and include the relevant\r\ndriver recipe. If a platform is not supported, the following will be\r\nprinted in the output of _chef-client_:\r\n\r\n    DEBUG: Compliance:: Unsupported Platform\r\n\r\nAttributes\r\n----------\r\n\r\n*[:compliance][:ignore]* - Array of files and directories to exempt from\r\ncompliance checking.\r\n\r\n*[:compliance][:failure]* - This is set to 'true' if any compliance\r\nchecks indicate failure on a run. This provides a way to poll any nodes\r\nthat are currently out of compliance:\r\n\r\n    knife search node 'compliance_failure:true'\r\n\r\nResources\r\n---------\r\n\r\nThis cookbook comes with an _audit_ resource. Some examples of its use\r\nare as follows:\r\n\r\n    audit \"/tmp\" do\r\n      resource \"directory\"\r\n      owner \"root\"\r\n      group \"root\"\r\n      mode \"1777\"\r\n    end\r\n\r\n    audit \"/usr/bin/passwd\" do\r\n      resource \"file\"\r\n      owner \"root\"\r\n      group \"root\"\r\n      mode  \"4755\"\r\n    end\r\n\r\nIf an audited resource does not match its signature, the following log\r\nwill be printed in the output of _chef-client_:\r\n\r\n    WARN: Compliance::Failure <resource>\r\n\r\nAlso, if an audited resource does not exist, a compliance check will not\r\nbe performed and no action will be taken.\r\n\r\nFinally, Chef will make sure the desired state is set. If you make\r\nlocal changes to files covered by this cookbook, add the full paths to\r\n*node[:compliance][:ignore]* and they will not be brought into\r\ncompliance.\r\n\r\nFor example, if you administratively change */usr/bin/passwd*, adding:\r\n\r\n    \"compliance\": {\r\n      \"ignore\": [\r\n        \"/usr/bin/passwd\"\r\n      ]\r\n    }\r\n\r\nto the node will prevent this cookbook from taking action. Additional\r\nfiles and directories can be added to the attribute array as needed.\r\nIgnored resources will be reflected in the output of _chef-client_ with\r\nthe following warning:\r\n\r\n    WARN: Compliance::Ignore <resource>\r\n\r\nLICENSE AND AUTHOR\r\n==================\r\n\r\nAuthor:: Adam Garside (<adam.garside@gmail.com>)\r\n\r\nCopyright 2009-2012, Adam Garside\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n","name":"Cookbook-compliance","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Opscode Chef cookbook to verify ownership, permissions, etc., on important standard system binaries and files","google":""}